// Module to control the application lifecycle and the native browser window.
import { app, BrowserWindow, protocol } from "electron";
import path from "path";

// Create the native browser window.
function createWindow() {
  const mainWindow = new BrowserWindow({
    width: 800,
    height: 600,
    // Set the path of an additional "preload" script that can be used to
    // communicate between node-land and browser-land.  Also establish set
    // properties for more secure interactions.
    webPreferences: {
      preload: path.join(__dirname, "preload.js"),
    },
  });

  // Start the main window on the appropriate URL depending on development vs production.
  // In production, set the initial browser path to the local bundle generated by Vite.
  // In development, set it to localhost using the port as passed in a command line argument.
  const appURL = app.isPackaged
    ? path.join(app.getAppPath(), 'renderer', 'index.html')
    : `http://localhost:${process.argv[2]}`;
  mainWindow.loadURL(appURL);

  // Automatically open Chrome's DevTools in development mode.
  if (!app.isPackaged) {
    mainWindow.webContents.openDevTools({mode : "undocked"});
  }
}


// This method will be called when Electron has finished its initialization and
// is ready to create the browser windows.
// Some APIs can only be used after this event occurs.
app.whenReady().then(() => {
  createWindow();
  app.on("activate", function () {
    // On macOS it's common to re-create a window in the app when the
    // dock icon is clicked and there are no other windows open.
    if (BrowserWindow.getAllWindows().length === 0) {
      createWindow();
    }
  });
});

// Quit when all windows are closed, except on macOS.
// On macOS, it's common for applications and their menu bar to stay active until
// the user explicitly quits with Cmd + Q.
app.on("window-all-closed", () => {
  if (process.platform !== 'darwin') {
    app.quit()
  }
});

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and require them here.